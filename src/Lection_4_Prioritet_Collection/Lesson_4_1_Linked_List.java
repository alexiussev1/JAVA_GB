package Lection_4_Prioritet_Collection;

import java.util.LinkedList;

public class Lesson_4_1_Linked_List {

    public static void main(String[] args) {

//        1. Разобраться, зачем нужно столько коллекций и JCF
//        2. LinkedList и особенности работы с ним
//        3. Узнать о списках, как об абстрактной структуре
//        4. Проблемы работы со списками и массивами
//        5. Построение разных Queue и как в этом помогает JCF
//        6. Deque и логика использования этой коллекции
//        7. То, что мертво, умереть не может – Stack в контексте JCF
//        У меня есть план


//        Зачем разные коллекции?
//        1. Способ обработки данных
//        2. Решаемые задачи


//        LinkedList
//        Представляет собой двусвязный список.

//        Список – гибкая структура данных, позволяющая легко менять свой
//        размер. Элементы доступны для вставки или удаления в любой позиции.
//        O->0->0->0->0->


//        Мотивация.
//        LinkedList нужен для небольшого количества
//        элементов, в которых операции добавления\удаления
//        встречаются чаще операций чтения.

        LinkedList <Integer> ll = new LinkedList<Integer>();

        ll.add(1);
        ll.add(2);
        ll.add(3);


    }
}
